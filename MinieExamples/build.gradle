// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

description = 'demos, examples, and tests that do not generate reports'

processResources.dependsOn(':MinieAssets:textures')
dependencies {
    implementation "jme3utilities:jme3-utilities-heart:$heartVersion"
    implementation "jme3utilities:jme3-utilities-ui:$jme3utilitiesuiVersion"
    runtimeOnly "org.jmonkeyengine:jme3-blender:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-desktop:$jmonkeyengineVersion"
    implementation "org.jmonkeyengine:jme3-effects:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-jogg:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-lwjgl3:$jmonkeyengineVersion"
    implementation "org.jmonkeyengine:jme3-plugins:$jmonkeyengineVersion"
    runtimeOnly 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'

    //implementation 'junit:junit:4.12'
    
    //implementation "jme3utilities:Minie:$minieVersion"
    implementation project(':MinieLibrary')
}

// cleanup tasks
clean {
    dependsOn 'cleanDLLs'
    dependsOn 'cleanLogs'
    dependsOn 'cleanSOs'
    dependsOn 'cleanTextures'
    dependsOn 'cleanWrittenAssets'
}
task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanLogs(type: Delete) {
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
task cleanSOs(type: Delete) {
    delete fileTree(dir: '.', include: '*.so')
}
task cleanTextures(type: Delete) {
    delete 'src/main/resources/Textures'
}
task cleanWrittenAssets(type: Delete) {
    delete 'Written Assets'
}