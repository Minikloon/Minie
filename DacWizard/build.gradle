// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

plugins {
    id 'application'
}

description = 'application to configure a DynamicAnimControl'

mainClassName = 'jme3utilities.minie.wizard.DacWizard'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}
jar.manifest.attributes('Main-Class': mainClassName)

dependencies {
    runtimeOnly 'com.github.nifty-gui:nifty-style-black:1.4.3'
    implementation 'com.github.stephengold:Heart:' + heartVersion
    implementation 'com.github.stephengold:jme3-utilities-nifty:0.9.20' + jmeTarget
    implementation 'com.github.stephengold:jme3-utilities-ui:' + jme3utilitiesuiVersion
    implementation 'com.github.stephengold:Wes:' + wesVersion
    runtimeOnly 'org.jmonkeyengine:jme3-desktop:' + jmonkeyengineVersion

    // select one version of LWJGL
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl:' + jmonkeyengineVersion // LWJGL 2.x
    //runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jmonkeyengineVersion // LWJGL 3.x

    // MinieExamples doesn't use jme3-jogg or jme3-plugins.
    // They are included solely to avoid warnings from AssetConfig.
    runtimeOnly 'org.jmonkeyengine:jme3-jogg:' + jmonkeyengineVersion
    runtimeOnly 'org.jmonkeyengine:jme3-plugins:' + jmonkeyengineVersion

    //implementation 'com.github.stephengold:Minie:' + minieVersion
    implementation project(':MinieLibrary')
}

task runForceDialog(type: JavaExec) {
    args = ['--forceDialog']
    main mainClassName
}
