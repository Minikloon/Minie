// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

description = 'application to configure a DynamicAnimControl'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'jme3utilities.minie.wizard.DacWizard'
}

dependencies {
    runtimeOnly 'com.github.nifty-gui:nifty-style-black:1.4.3'
    implementation "jme3utilities:jme3-utilities-heart:$heartVersion"
    implementation "jme3utilities:jme3-utilities-ui:$jme3utilitiesuiVersion"
    implementation 'jme3utilities:jme3-utilities-nifty:0.9.10for33'
    implementation 'jme3utilities:Wes:0.4.3for33'
    runtimeOnly "org.jmonkeyengine:jme3-blender:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-desktop:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-jogg:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-lwjgl3:$jmonkeyengineVersion"
    runtimeOnly "org.jmonkeyengine:jme3-plugins:$jmonkeyengineVersion"

    //implementation "jme3utilities:Minie:$minieVersion"
    implementation project(':MinieLibrary')
}

jar.manifest.attributes( 'Main-Class': 'jme3utilities.minie.wizard.DacWizard' )

// cleanup tasks
clean.dependsOn('cleanDLLs', 'cleanLogs', 'cleanSOs', 'cleanWrittenAssets')
task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanLogs(type: Delete) {
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
task cleanSOs(type: Delete) {
    delete fileTree(dir: '.', include: '*.so')
}
task cleanWrittenAssets(type: Delete) {
    delete 'Written Assets'
}