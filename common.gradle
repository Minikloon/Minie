// Gradle settings and tasks common to all Minie subprojects

apply plugin: 'java'

ext {
    jmeTarget = '' // distinguish libraries built for different JME releases

    // module coordinates of dependencies:
    acorusCoordinates = 'com.github.stephengold:Acorus:0.9.7' + jmeTarget
    heartCoordinates = 'com.github.stephengold:Heart:7.2.0' + jmeTarget
    junitCoordinates = 'junit:junit:4.13.2'
    testdataCoordinates = 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'
    wesCoordinates = 'com.github.stephengold:Wes:0.6.8' + jmeTarget

    // current versions of libraries:
    jme3Version = '3.5.0-stable'
    minieVersion = '4.6.2'

    minieSnapshot = '-SNAPSHOT' // distinguish development builds from releases
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) { // Java compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    options.compilerArgs << '-Xlint:unchecked'
    //options.deprecation = true
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) { // Java runtime options:
    classpath sourceSets.main.runtimeClasspath
    enableAssertions true
    //jvmArgs '-verbose:gc'
    //jvmArgs '-Xcheck:jni'
    jvmArgs '-Xms1024m', '-Xmx1024m'
    //jvmArgs '-XX:+UseConcMarkSweepGC'
    jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
}

repositories {
    //mavenLocal()
    mavenCentral()
    maven { url 'https://jcenter.bintray.com' } // for SimMath
}

// cleanup tasks

clean.dependsOn('cleanDLLs', 'cleanDyLibs', 'cleanLogs', 'cleanPDBs')
clean.dependsOn('cleanSOs', 'cleanWrittenAssets')

task cleanDLLs(type: Delete) { // Windows native libraries
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanDyLibs(type: Delete) { // MacOSX native libraries
    delete fileTree(dir: '.', include: '*.dylib')
}
task cleanLogs(type: Delete) { // JVM crash logs
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
task cleanPDBs(type: Delete) { // Windows program database files
    delete fileTree(dir: '.', include: '*.pdb')
}
task cleanSOs(type: Delete) { // Linux and Android native libraries
    delete fileTree(dir: '.', include: '*.so')
}
task cleanWrittenAssets(type: Delete) { // jme3-utilities-ui output directory
    delete 'Written Assets'
}
