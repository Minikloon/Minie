package vhacd.vhacd_native;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.FloatByReference;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VHACDNativeConvexHull extends Structure {
	public FloatByReference positions;
	public IntByReference indexes;
	public int n_positions;
	public int n_indexes;
	public VHACDNativeConvexHull() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("positions", "indexes", "n_positions", "n_indexes");
	}
	public VHACDNativeConvexHull(FloatByReference positions, IntByReference indexes, int n_positions, int n_indexes) {
		super();
		this.positions = positions;
		this.indexes = indexes;
		this.n_positions = n_positions;
		this.n_indexes = n_indexes;
	}
	public VHACDNativeConvexHull(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends VHACDNativeConvexHull implements Structure.ByReference {
		
	};
	public static class ByValue extends VHACDNativeConvexHull implements Structure.ByValue {
		
	};
}
